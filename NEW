This lists only the changes for the current release (v1.62) over the last
version, since HISTORY is now quite big:

Calc  : fixed a bug in _rsft that forgot to set the result to 0 if you
	 shifted only a few more digits right than $x had
        _modinv() now works thanx to the all-positive algorithmn in MBI. It
         speeds bmodinv() up by more than a factor of 4
MBI   : bmodinv() now keeps internals positive, speeding it up by about 5-8%
	bcmp()/bacmp() upgrade if neccessary
MBF   : bcmp()/bacmp() upgrade if neccessary
tests : tests for the _rsft bug-fix
	more tests for bmodinv()
	tests for bcmp()/bacmp()'s upgrading
	more tests for _num()/_inc()/_dec()/_copy() etc in bigintc.t

v1.61 Calc v0.31:
Benchmark: running modinv_1, modinv_2 for at least 3 CPU seconds...
  modinv_1:  4s (3.23 usr +  0.00 sys =  3.23 CPU) @ 248/s (n=801)
  modinv_2:  4s (3.17 usr +  0.00 sys =  3.17 CPU) @  25/s (n=80)

v1.62 Calc v0.30:
Benchmark: running modinv_1, modinv_2 for at least 3 CPU seconds...
  modinv_1:  4s (3.12 usr +  0.00 sys =  3.12 CPU) @ 262/s (n=818)      1.056
  modinv_2:  4s (3.18 usr +  0.00 sys =  3.18 CPU) @  27/s (n=85)       1.08

v1.62 Calc v0.32:
Benchmark: running modinv_1, modinv_2 for at least 3 CPU seconds...
  modinv_1:  4s (3.00 usr +  0.00 sys =  3.00 CPU) @ 1163/s (n=3488)    4.68
  modinv_2:  4s (3.00 usr +  0.00 sys =  3.00 CPU) @  106/s (n=317)     4.24

###############################################################################

Please have Math::BigInt->new('inf')->bmul('inf') big amounts of fun.

Tels <http://bloodgate.com/perl>

