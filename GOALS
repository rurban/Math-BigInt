This file contains a short description of what the goals of this project are,
building guidelines etc. This was born after discussions with John Peacock, who
provided helpfull feedback.

* KISS - Keep It Simple, Stupid!
* Favour correctness over speed
* Make your code maintable, so avoid Copy&Paste.
* Optimize more for the average case than the worst, while trying to avoid 
  performance hits for the worst case.
  The average case is more for longer numbers than short, based on the
  assumption that if you wanted to add 1 and 2 _fast_ together, you wouldn't
  use BigInt nor Perl, now would you? ;)
* Make subclassing as easy and painless as possible. This means clean
  inheritance and overload section, no C&P code etc.
* Make mixing of classes work, like in:

	$x = Math::BigFloat->new(10);
	$y = Math::BigInt->new(2);
	$z = $x / $y;			# $z = Math::BigFloat = 5

  See also BUGS.

More to come later.

Please send me test-reports, your experiences with this and your ideas - I love
to hear about my work!

Tels <http://bloodgate.com/>
